<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:JuliusSweetland.OptiKids.Properties"
                    xmlns:valueConverters="clr-namespace:JuliusSweetland.OptiKids.UI.ValueConverters"
                    xmlns:controls="clr-namespace:JuliusSweetland.OptiKids.UI.Controls"
                    xmlns:behaviours="clr-namespace:JuliusSweetland.OptiKids.UI.Behaviours"
                    xmlns:enums="clr-namespace:JuliusSweetland.OptiKids.Enums">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OptiKids;component/Resources/Themes/Colours/Android.xaml" />
        <ResourceDictionary Source="/OptiKids;component/Resources/Icons/KeySymbols.xaml" />
        <ResourceDictionary>
            <SolidColorBrush x:Key="WindowBorderBrush" Color="{StaticResource Grey}" />
            
            <SolidColorBrush x:Key="KeyDefaultForegroundBrush" Color="{StaticResource Black}" />
            <SolidColorBrush x:Key="KeyDefaultBorderBrush" Color="{StaticResource Grey}" />
            <SolidColorBrush x:Key="KeyDefaultBackgroundBrush" Color="{StaticResource White}" />

            <SolidColorBrush x:Key="KeyHoverForegroundBrush" Color="{StaticResource Blue}" />
            <SolidColorBrush x:Key="KeySelectionProgressBrush" Color="{StaticResource Blue}" />

            <StaticResource x:Key="KeySelectionForeground" ResourceKey="Blue"/>
            <StaticResource x:Key="KeySelectionBorder" ResourceKey="Grey"/>
            <StaticResource x:Key="KeySelectionBackground" ResourceKey="Grey"/>

            <StaticResource x:Key="CorrectKeySelectionForeground" ResourceKey="White"/>
            <StaticResource x:Key="CorrectKeySelectionBorder" ResourceKey="Grey"/>
            <StaticResource x:Key="CorrectKeySelectionBackground" ResourceKey="Green"/>

            <StaticResource x:Key="IncorrectKeySelectionForeground" ResourceKey="White"/>
            <StaticResource x:Key="IncorrectKeySelectionBorder" ResourceKey="Grey"/>
            <StaticResource x:Key="IncorrectKeySelectionBackground" ResourceKey="Red"/>

            <SolidColorBrush x:Key="ScratchpadForegroundBrush" Color="{StaticResource Blue}" />
            <SolidColorBrush x:Key="ScratchpadBorderBrush" Color="{StaticResource Grey}" />
            <SolidColorBrush x:Key="ScratchpadBackgroundBrush" Color="{StaticResource White}" />

            <valueConverters:LengthDividedBySpan x:Key="LengthDividedBySpan" />

            <Style x:Key="KeyTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource KeyDefaultForegroundBrush}" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Text" Value="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type controls:Key}}}" />
                <Setter Property="FontFamily" Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontFamily}" />
                <Setter Property="FontWeight" Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontWeight}" />
                <Setter Property="FontStretch" Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontStretch}" />
                <Setter Property="behaviours:KeyBehaviours.BeginAnimationOnCorrectKeySelectionEvent">
                    <Setter.Value>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource CorrectKeySelectionForeground}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </Setter.Value>
                </Setter>
                <Setter Property="behaviours:KeyBehaviours.BeginAnimationOnIncorrectKeySelectionEvent">
                    <Setter.Value>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource IncorrectKeySelectionForeground}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="KeySelectionProgressStyle" TargetType="{x:Type controls:ProgressIndicator}">
                <Setter Property="Fill" Value="{StaticResource KeySelectionProgressBrush}" />
                <Setter Property="MaxValue" Value="1" />
                <Setter Property="Value" Value="{Binding Path=SelectionProgress, RelativeSource={RelativeSource AncestorType={x:Type controls:Key}}, Mode=OneWay}" />
                <Style.Triggers>
                    <!--Progress is 0-->
                    <Trigger Property="Value" Value="0">
                        <Setter Property="Visibility" Value="Hidden" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="KeyBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Padding" Value="2" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource KeyDefaultBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource KeyDefaultBackgroundBrush}" />
                <Setter Property="behaviours:KeyBehaviours.BeginAnimationOnCorrectKeySelectionEvent">
                    <Setter.Value>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource CorrectKeySelectionBorder}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource CorrectKeySelectionBackground}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </Setter.Value>
                </Setter>
                <Setter Property="behaviours:KeyBehaviours.BeginAnimationOnIncorrectKeySelectionEvent">
                    <Setter.Value>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource IncorrectKeySelectionBorder}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                          Duration="0:0:0.2" FillBehavior="Stop">
                                <DiscreteColorKeyFrame Value="{StaticResource IncorrectKeySelectionBackground}" KeyTime="0:0:0" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="KeyBorderHighlightStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="5" />
                <Setter Property="BorderBrush" Value="{StaticResource KeyHoverForegroundBrush}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <BlurEffect Radius="5.0" KernelType="Gaussian"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <!--Make visible when this key is current-->
                    <DataTrigger Binding="{Binding Path=IsCurrent, RelativeSource={RelativeSource AncestorType={x:Type controls:Key}}, Mode=OneWay}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type controls:Key}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:Key}">
                            <Grid>
                                <Border Style="{StaticResource KeyBorderStyle}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="2*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <ContentControl Grid.RowSpan="3">
                                            <!--Enforce size limits of one key high/wide using the Span info on the key-->
                                            <ContentControl.MaxWidth>
                                                <MultiBinding Converter="{StaticResource LengthDividedBySpan}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                        <Binding Path="WidthSpan" RelativeSource="{RelativeSource AncestorType={x:Type controls:Key}}" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </ContentControl.MaxWidth>
                                            <ContentControl.MaxHeight>
                                                <MultiBinding Converter="{StaticResource LengthDividedBySpan}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType={x:Type Grid}}" />
                                                        <Binding Path="HeightSpan" RelativeSource="{RelativeSource AncestorType={x:Type controls:Key}}" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </ContentControl.MaxHeight>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*" />
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="8*" />
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="1*" />
                                                </Grid.ColumnDefinitions>
                                                <controls:ProgressIndicator Grid.Column="1" Grid.ColumnSpan="3" 
                                                                            Style="{StaticResource KeySelectionProgressStyle}" />
                                                <Viewbox>
                                                    <Viewbox.Style>
                                                        <Style TargetType="{x:Type Viewbox}">
                                                            <Setter Property="Grid.Column" Value="1" />
                                                            <Setter Property="Grid.ColumnSpan" Value="3" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=HasSymbol, RelativeSource={RelativeSource AncestorType={x:Type controls:Key}}}" Value="False">
                                                                    <Setter Property="Grid.Column" Value="2" />
                                                                    <Setter Property="Grid.ColumnSpan" Value="1" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Viewbox.Style>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition SharedSizeGroup="{Binding Path=SharedSizeGroup, RelativeSource={RelativeSource AncestorType={x:Type controls:Key}}}" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource KeyTextStyle}" />
                                                    </Grid>
                                                </Viewbox>
                                            </Grid>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                                <Border Style="{StaticResource KeyBorderHighlightStyle}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type controls:Scratchpad}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:Scratchpad}">
                            <Border BorderThickness="1">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="{StaticResource ScratchpadBorderBrush}" />
                                    </Style>
                                </Border.Style>
                                <controls:TextBlockScaler Margin="5">
                                    <TextBlock Text="{TemplateBinding Text}"
                                               TextWrapping="Wrap"
                                               TextAlignment="Center"
                                               FontFamily="{Binding Source={x:Static properties:Settings.Default}, Path=FontFamily}"
                                               FontWeight="{Binding Source={x:Static properties:Settings.Default}, Path=FontWeight}"
                                               FontStretch="{Binding Source={x:Static properties:Settings.Default}, Path=FontStretch}"
                                               Foreground="{StaticResource ScratchpadForegroundBrush}"
                                               Background="{StaticResource ScratchpadBackgroundBrush}" />
                                </controls:TextBlockScaler>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>